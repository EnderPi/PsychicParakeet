@page "/simulationdesigner"
@attribute [Authorize]
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject EnderPi.Framework.DataAccess.LogDataAccess logDataAccess

<h3>Simulation Designer</h3>

<EditForm Model="@simulationModel" OnValidSubmit="SaveSimulation">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>
            Name:
            <InputText @bind-Value="simulationModel.Name" />
        </label>
    </p>

    <p>
        <label>
            Expression (needs an "x"):
            <InputText @bind-Value="simulationModel.Expression" />
        </label>
    </p>

    <p>
        <label>
            Iterations:
            <InputNumber @bind-Value="simulationModel.Iterations" />
        </label>
    </p>

    <p>
        <label>
            Percentile to Report (0-100):
            <InputNumber @bind-Value="simulationModel.Percentile" />
        </label>
    </p>

    <button type="submit">Save</button>

</EditForm>




@code {

    private int simulationId = 0;

    private LogViewer.Models.SimulationModel simulationModel = new Models.SimulationModel();

    protected override void OnInitialized()
    {
        var query = new Uri(NavigationManager.Uri).Query;

        if (QueryHelpers.ParseQuery(query).TryGetValue("id", out var value))
        {
            int.TryParse(value, out simulationId);
        }

        //query parameters bad, should pass state around server side by setting component property

        //so we need to ensure there is an ID and it exists and the user has access

        //then populate model

        base.OnInitialized();
    }

    //This page is to design a simulation, so it needs a model for form entry, and some validation, and a save feature?

    //so how do you load a simulation?  from another page?

    //so we need a page to look at a list of simulations, then load it in the editor from there.

    //so this takes a query parameter of an ID, but needs to be authorized, obviously.

    private void SaveSimulation()
    {
        //need to validate expression tbh
        //.persist to DB
        //inform user if error
    }


}
